version: "3.4"

services:

    mysql: # MySQL container definition
        image: TO_BE_FILLED # Use latest mysql image
        container_name: exercise4_4_mysql # Set MySQL container name
        volumes:
            - db_data:/var/lib/mysql # Make MySQL volume persistent
        ports: # Expose port 3306 to access mysql from outside the containers
            - TO_BE_FILLED
        environment: # Sets environment vars on the container
            - MYSQL_ROOT_PASSWORD=root # From container documentation: Sets the MySQL root user password
            - MYSQL_DATABASE=test-db # From container documentation: Creates a database with this name
        networks: # Creates a mysql network to allow access to the container from php only
            - TO_BE_FILLED

    mail: # Mail container definition
        image: TO_BE_FILLED # Use Mailhog v1.0.0 image
        container_name: exercise4_4_mail # Set Mail container name
        ports: # Expose port 8025 to access mail from outside the containers
            - TO_BE_FILLED
        networks: # Creates a mail network to allow access to the container from php only
            - TO_BE_FILLED

    php: # PHP container definition
        image: TO_BE_FILLED # Use custom exercise4_4-php latest image
        container_name: exercise4_4_php # Set PHP container name
        depends_on:
            - TO_BE_FILLED # This container depends on the mysql container
        env_file: # Load the local .env file into the container env vars
            - TO_BE_FILLED
        environment: # Sets environment vars on the container
            - TESTING_VAR2="Ho ho ho" # Adds an environment var TESTING_VAR2 with value "Ho ho ho"
        volumes: # Mount files on the clean PHP image
            - ./site:/site # Mount site folder on path /site for the container
        extra_hosts: # Add host.docker.internal host to point to 172.17.0.1
            - TO_BE_FILLED
        networks: # Add php to all its required networks
            - TO_BE_FILLED # Needs to be accessed by the webserver
            - TO_BE_FILLED # Needs to access the database
            - TO_BE_FILLED # Needs to access the mail server

    nginx: # Nginx container definition
        image: TO_BE_FILLED # Use latest nginx image
        container_name: exercise4_4_nginx # Set Nginx container name
        ports: # Expose port 80
            - TO_BE_FILLED
        depends_on:
            - TO_BE_FILLED # The webserver should not run until PHP is already working
        volumes: # Mount files on the clean Nginx image
            - ./site:/site # Mount site folder on path /site for the container
            - ./config/nginx.conf:/etc/nginx/conf.d/default.conf # Add Nginx config on /etc/nginx/conf.d/default.conf
        networks:
            - TO_BE_FILLED # Needs to access PHP to run code

volumes:
    db_data:

networks:
    webserver:
    mysql:
    mail:
